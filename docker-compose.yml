version: '3'
services:
    php:
        build:
            context: ./docker
            dockerfile: php.Dockerfile
        container_name: ${APP_NAME:?err}-php
        volumes:
            - './www:/var/www/html:rw'
            - './config/php/php.ini:/usr/local/etc/php/php.ini:ro'
            - './config/php/crontab:/etc/crontab:ro'
            - './logs/php-cron.log:/var/log/cron.log:rw'
        depends_on:
            - mariadb
            - memcached
            - elasticsearch

    nginx:
        image: nginx:latest
        container_name: ${APP_NAME:?err}-nginx
        ports:
            - '${PUBLIC_IP}:80:80'
            - '${PUBLIC_IP}:443:443'
        links:
            - 'php'
        restart: always
        volumes:
            - './www:/var/www/html'
            - './config/nginx:/etc/nginx/templates'
            - ./config/certbot/www:/var/www/certbot/:ro
            - ./config/certbot/conf/:/etc/nginx/ssl/:ro
            - ./logs:/var/log
        environment:
           APP_NAME: ${APP_NAME}
           NGINX_WWWHOST: ${NGINX_WWWHOST}
           NGINX_HOST: ${NGINX_HOST}
        depends_on:
            - php

    certbot:
        image: certbot/certbot:latest
        container_name: ${APP_NAME:?err}-certbot
        volumes:
            - ./config/certbot/www/:/var/www/certbot/:rw
            - ./config/certbot/conf/:/etc/letsencrypt/:rw
        entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
        depends_on:
            - nginx

    mariadb:
        image: mariadb:10.5
        container_name: ${APP_NAME:?err}-mariadb
        restart: 'on-failure'
        environment:
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:?err}
            MYSQL_DATABASE: ${MYSQL_DATABASE}
            MYSQL_USER: ${MYSQL_USER}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD}

        volumes:
            - './db:/var/lib/mysql'


    elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:6.8.23
        container_name: ${APP_NAME:?err}-elasticsearch
        environment:
            - node.name=es01
            - cluster.name=ac-docker-cluster
            - discovery.type=single-node
            - bootstrap.memory_lock=true
            - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
        ulimits:
            memlock:
                soft: -1
                hard: -1
        volumes:
            - elasticsearch-data01:/usr/share/elasticsearch/data
        expose:
            - 9200

    elasticsearch_exporter:
        image: quay.io/prometheuscommunity/elasticsearch-exporter:latest
        container_name: ${APP_NAME:?err}-elasticsearch-exporter
        restart: always
        command:
            - '--es.uri=http://${APP_NAME:?err}-elasticsearch:9200'
        ports:
            - "10.1.0.21:9115:9114"
        depends_on:
            - elasticsearch

    memcached:
        container_name: ${APP_NAME:?err}-memcached
        image: memcached:latest
        expose:
            - 11211

volumes:
   elasticsearch-data01:
        driver: local



