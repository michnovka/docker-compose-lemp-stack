server {
    listen 80;
    listen [::]:80;

    server_name ${NGINX_HOST} ${NGINX_WWWHOST};
    server_tokens off;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        return 301 https://${NGINX_WWWHOST}$request_uri;
    }
}

server {
    listen 443 default_server ssl http2;

    index index.php index.html;
    server_name ${NGINX_HOST} ${NGINX_WWWHOST};

    error_log  /var/log/nginx/error.log;
    access_log /var/log/nginx/access.log;

    root /var/www/html;

    ssl_certificate /etc/nginx/ssl/live/${NGINX_WWWHOST}/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/live/${NGINX_WWWHOST}/privkey.pem;


    # Don't use outdated SSLv3 protocol. Protects against BEAST and POODLE attacks.
    ssl_protocols TLSv1.2 TLSv1.3;

    # Use secure ciphers
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # Define the size of the SSL session cache in MBs.
    ssl_session_cache shared:SSL:1m;

    # Define the time in minutes to cache SSL sessions.
    ssl_session_timeout 24h;

    # Tell browsers the site should only be accessed via https.
    add_header Strict-Transport-Security "max-age=63072000" always;

    location / {
        try_files $uri $uri/ /index.php?$args;
    }

    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass ${APP_NAME}-php:9000;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
    }

    # Static files
    location ~* ^.+\.(jpg|jpeg|gif|css|png|js|ico|html|txt)$ {
        access_log        off;
        expires           30d;
    }

    # Rewrite robots.txt
    rewrite ^/robots.txt$ /index.php last;
}
